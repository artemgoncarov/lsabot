import time
import sys
from vkbottle.bot import Bot, Message
import random
import asyncio
import aiosqlite
from vkbottle import BaseStateGroup
from vk_api.longpoll import VkLongPoll, VkEventType
from vk_api.keyboard import VkKeyboard, VkKeyboardColor
import vk_api
from datetime import datetime
import random
import os
import time
from vkbottle import API

token = "93ffbc4048b9d780354f6003146b650a6a988944b0deabda03ed8b7585105f11a1f28b91cd5fb33b552b2"

bot = Bot(token=token)

infa = [[534563953, "Cambino_Timov", "–°–µ—Ä–∂–∞–Ω—Ç [4]", "0"],
        [596611142, "Daniil_Its", "–ì–µ–Ω–µ—Ä–∞–ª [10]", "0"]
        # [580832274, "Arseny_Hiro", "–ë–µ–∑—Ä–∞–±–æ—Ç–Ω—ã–π [0]", "0"]
        ]

moderators = [
    534563953,
    596611142
]

uid: int = 0

@bot.on.message(text="/letsplay")
async def letsplay(message: Message):
    await message.answer("‚ö† | –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ! @all –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ —Ñ—Ä–∞–∫—Ü–∏–∏ –≤—ã–∑—ã–≤–∞–µ—Ç –í–∞—Å –≤ –∏–≥—Ä—É.")
    time.sleep(3600)
    await message.answer("‚ö† | –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ! @all –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ —Ñ—Ä–∞–∫—Ü–∏–∏ –≤—ã–∑—ã–≤–∞–µ—Ç –í–∞—Å –≤ –∏–≥—Ä—É.")
    time.sleep(3600)
    await message.answer("‚ö† | –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ! @all –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ —Ñ—Ä–∞–∫—Ü–∏–∏ –≤—ã–∑—ã–≤–∞–µ—Ç –í–∞—Å –≤ –∏–≥—Ä—É.")
    time.sleep(3600)
    await message.answer("‚ö† | –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ! @all –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ —Ñ—Ä–∞–∫—Ü–∏–∏ –≤—ã–∑—ã–≤–∞–µ—Ç –í–∞—Å –≤ –∏–≥—Ä—É.")
    time.sleep(3600)
    await message.answer("‚ö† | –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ! @all –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ —Ñ—Ä–∞–∫—Ü–∏–∏ –≤—ã–∑—ã–≤–∞–µ—Ç –í–∞—Å –≤ –∏–≥—Ä—É.")
    time.sleep(3600)
    await message.answer("‚ö† | –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ! @all –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ —Ñ—Ä–∞–∫—Ü–∏–∏ –≤—ã–∑—ã–≤–∞–µ—Ç –í–∞—Å –≤ –∏–≥—Ä—É.")
    time.sleep(3600)
    await message.answer("‚ö† | –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ! @all –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ —Ñ—Ä–∞–∫—Ü–∏–∏ –≤—ã–∑—ã–≤–∞–µ—Ç –í–∞—Å –≤ –∏–≥—Ä—É.")
    time.sleep(3600)
    await message.answer("‚ö† | –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ! @all –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ —Ñ—Ä–∞–∫—Ü–∏–∏ –≤—ã–∑—ã–≤–∞–µ—Ç –í–∞—Å –≤ –∏–≥—Ä—É.")
    time.sleep(3600)
    await message.answer("‚ö† | –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ! @all –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ —Ñ—Ä–∞–∫—Ü–∏–∏ –≤—ã–∑—ã–≤–∞–µ—Ç –í–∞—Å –≤ –∏–≥—Ä—É.")
    time.sleep(3600)
    await message.answer("‚ö† | –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ! @all –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ —Ñ—Ä–∞–∫—Ü–∏–∏ –≤—ã–∑—ã–≤–∞–µ—Ç –í–∞—Å –≤ –∏–≥—Ä—É.")
    time.sleep(3600)
    await message.answer("‚ö† | –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ! @all –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ —Ñ—Ä–∞–∫—Ü–∏–∏ –≤—ã–∑—ã–≤–∞–µ—Ç –í–∞—Å –≤ –∏–≥—Ä—É.")
    time.sleep(3600)
    await message.answer("‚ö† | –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ! @all –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ —Ñ—Ä–∞–∫—Ü–∏–∏ –≤—ã–∑—ã–≤–∞–µ—Ç –í–∞—Å –≤ –∏–≥—Ä—É.")
    time.sleep(3600)
    await message.answer("‚ö† | –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ! @all –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ —Ñ—Ä–∞–∫—Ü–∏–∏ –≤—ã–∑—ã–≤–∞–µ—Ç –í–∞—Å –≤ –∏–≥—Ä—É.")
    time.sleep(3600)



@bot.on.message(text="/qq")
async def hi_handler(message: Message):
    users_info = await bot.api.users.get(message.from_id)
    await message.answer("–ü—Ä–∏–≤–µ—Ç, {}".format(users_info[0].first_name))


@bot.on.message(text="/whoi")
async def hi_handler(message: Message):
    users_info = await bot.api.users.get(message.from_id)
    a = random.randint(0,5)
    name = None
    if a == 0:
        name = "–∂–∞—Ä–µ–Ω–∞—è –∫–∞—Ä—Ç–æ—à–∫–∞"
    if a == 1:
        name = "—Å–æ–ª–µ–Ω—ã–π –ø–æ–º–∏–¥–æ—Ä"
    if a == 2:
        name = "–≤—è–ª–µ–Ω–∞—è –ø–µ—Ç—Ä—É—à–∫–∞"
    if a == 3:
        name = "–Ω–µ–¥–æ–¥–µ–ª–∞–Ω–Ω—ã–π –æ–≤–æ—â"
    if a == 4:
        name = "–≤–∫—É—Å–Ω—ã–π –ø–µ–ª—å–º–µ–Ω—å"
    if a == 5:
        name = "–±—É—Ä–≥–µ—Ä –∏–∑ –∫—Ñ—Å"
    await message.answer("–ü—Ä–∏–≤–µ—Ç, @id{}".format(users_info[0].id) + " (" + users_info[0].first_name + " " + users_info[0].last_name + ")" + ", —Ç—ã " + name)

@bot.on.message(text="/hello")
async def help(message: Message):
    users_info = await bot.api.users.get(message.from_id)
    await message.answer("–ü—Ä–∏–≤–µ—Ç, @id{}".format(users_info[0].id) + "(" + "{}".format(users_info[0].first_name) + " {}".format(users_info[0].last_name) +")")



@bot.on.message(text="/nicks")
async def nicks(message: Message):
    users_info = await bot.api.users.get(message.from_id)
    l = len(infa) + 1
    for i in range(0, l):
        await message.answer("@id{}".format(infa[i][0]) + " ("  + infa[i][1] + ")" )


@bot.on.message(text="/myinfo")
async def information(message: Message):
    users_info = await bot.api.users.get(message.from_id)
    id_user = users_info[0].id
    l = len(infa)
    lst = []
    for i in range(0, l):
        lst.append(infa[i][0])
    if id_user in lst:
        i = lst.index(id_user)
        await message.answer("üë§ | –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å —Ñ—Ä–∞–∫—Ü–∏–∏ –õ–°–∞:" + "\n‚ú® | –ù–∏–∫–Ω–µ–π–º: " + infa[i][1] + "\nüéÉ | –†–∞–Ω–≥: " + infa[i][2] + "\nüíé | –ë–∞–ª–ª—ã: " + infa[i][3])
    else:
        await message.answer("‚ùó–û—à–∏–±–∫–∞, –≤—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã‚ùó")




@bot.on.message(text="/help")
async def help(message: Message):
    users_info = await bot.api.users.get(message.from_id)
    await message.answer("–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥: \n /help \n /myinfo \n /hello \n /qq \n /regme <nick> \n /whoi \n /changenick <nick>")


@bot.on.message(text="/regme <nick>")
async def testid(message: Message, nick=None):
    users_info = await bot.api.users.get(message.from_id)
    uid = users_info[0].id
    lst = []
    l = len(infa)
    for i in range(0, l):
        lst.append(infa[i][0])
    if uid not in lst:
        infa.append([uid,nick, "–ë–µ–∑—Ä–∞–±–æ—Ç–Ω—ã–π[0]", "0"])
        await message.answer("üíé –£—á–∞—Å—Ç–Ω–∏–∫ —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω! üíé")
    else:
        await message.answer("‚ùó–û—à–∏–±–∫–∞, –≤—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã‚ùó")

@bot.on.message(text="/changenick <nick>")
async def changenick(message: Message, nick=None):
    users_info = await bot.api.users.get(message.from_id)
    uid = users_info[0].id
    lst = []
    l = len(infa)
    for i in range(0, l):
        lst.append(infa[i][0])
    if uid in lst:
        i = lst.index(uid)
        infa[i][1] = nick
    else:
        await message.answer("‚ùó–û—à–∏–±–∫–∞, –≤—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã‚ùó")

@bot.on.message(text="/info <id>")
async def find(message: Message, id=None):
    users_info = await bot.api.users.get(message.from_id)
    aid = users_info[0].id
    uid = id
    uid = id.split("|")
    uid = uid[0].split("[")
    uid = uid[1].split("id")
    uid = int(uid[1])
    lst = []
    l = len(infa)
    for i in range(0, l):
        lst.append(infa[i][0])
    if aid in moderators:
        i = lst.index(uid)
        await message.answer("üë§ | –ü—Ä–æ—Ñ–∏–ª—å –∏–≥—Ä–æ–∫–∞ —Ñ—Ä–∞–∫—Ü–∏–∏ –õ–°–∞:" + "\n‚ú® | –ù–∏–∫–Ω–µ–π–º: " + infa[i][1] + "\nüéÉ | –†–∞–Ω–≥: " + infa[i][2] + "\nüíé | –ë–∞–ª–ª—ã: " + infa[i][3])
    else:
        await message.answer("‚ùó–û—à–∏–±–∫–∞, –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤‚ùó")

@bot.on.message(text="/makemod <id>")
async def makemod(message: Message, id=None):
    users_info = await bot.api.users.get(message.from_id)
    aid = users_info[0].id
    uid = id
    uid = id.split("|")
    uid = uid[0].split("[")
    uid = uid[1].split("id")
    uid = int(uid[1])
    if aid in moderators:
        moderators.append(uid)
        await message.answer("üíé –£—á–∞—Å—Ç–Ω–∏–∫ —É—Å–ø–µ—à–Ω–æ –Ω–∞–∑–Ω–∞—á–µ–Ω –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º! üíé")
    else:
        await message.answer("‚ùó–û—à–∏–±–∫–∞, –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤‚ùó")

@bot.on.message(text="/unmakemod <id>")
async def unmakemod(message: Message, id=None):
    users_info = await bot.api.users.get(message.from_id)
    aid = users_info[0].id
    uid = id
    uid = id.split("|")
    uid = uid[0].split("[")
    uid = uid[1].split("id")
    uid = int(uid[1])
    if aid in moderators:
        moderators.remove(uid)
    else:
        await message.answer("‚ùó–û—à–∏–±–∫–∞, –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤‚ùó")

@bot.on.message(text="/setballs <id> <balls>")
async def setballs(message: Message, id=None, balls=None):
    users_info = await bot.api.users.get(message.from_id)
    aid = users_info[0].id
    uid = id
    uid = id.split("|")
    uid = uid[0].split("[")
    uid = uid[1].split("id")
    uid = int(uid[1])
    lst = []
    l = len(infa)
    for i in range(0, l):
        lst.append(infa[i][0])
    if aid in moderators:
        i = lst.index(uid)
        infa[i][3] = balls
        await message.answer("üíé –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∞–ª–ª–æ–≤ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–µ–Ω–æ! üíé")
    else:
        await message.answer("‚ùó–û—à–∏–±–∫–∞, –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤‚ùó")

@bot.on.message(text="/setrank <id> <rank>")
async def setrank(message: Message, id=None, rank=None):
    rang = None
    if rank == "0":
        rang = "–ë–µ–∑—Ä–∞–±–æ—Ç–Ω—ã–π [0]"
    if rank == "1":
        rang = "–†—è–¥–æ–≤–æ–π [1]"
    if rank == "2":
        rang = "–ö–∞–ø—Ä–∞–ª [2]"
    if rank == "3":
        rang = "–°—Ç–∞—Ä—à–∏–Ω–∞ [3]"
    if rank == "4":
        rang = "–°–µ—Ä–∂–∞–Ω—Ç [4]"
    if rank == "5":
        rang = "–õ–µ–π—Ç–µ–Ω–∞–Ω—Ç [5]"
    if rank == "6":
        rang = "–ö–∞–ø–∏—Ç–∞–Ω [6]"
    if rank == "7":
        rang = "–ú–∞–π–æ—Ä [7]"
    if rank == "8":
        rang = "–ü–æ–¥–ø–æ–ª–∫–æ–≤–Ω–∏–∫ [8]"
    if rank == "9":
        rang = "–ü–æ–ª–∫–æ–≤–Ω–∏–∫ [9]"
    if rank == "10":
        rang = "–ì–µ–Ω–µ—Ä–∞–ª [10]"
    if rank == "11":
        rang = "–ú–∏–Ω–∏—Å—Ç—Ä –û–±–æ—Ä–æ–Ω—ã [11]"
    if rank == "12":
        rang = "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä"
    users_info = await bot.api.users.get(message.from_id)
    aid = users_info[0].id
    uid = id
    uid = id.split("|")
    uid = uid[0].split("[")
    uid = uid[1].split("id")
    uid = int(uid[1])
    if aid in moderators:
        for i in range(0, len(infa)):
            if uid in infa[i]:
                infa[i][2] = rang
                await message.answer("üíé –†–∞–Ω–≥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω! üíé")
    else:
        await message.answer("‚ùó–û—à–∏–±–∫–∞, –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤‚ùó")





bot.run_forever()

